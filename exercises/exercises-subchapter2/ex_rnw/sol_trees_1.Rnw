\begin{itemize}
  \item 

  Proceed as follows, when solving manually:

  \begin{enumerate}
    \item Split $x$ in two groups using the following split points.
    \begin{itemize}
      \item $ (1)$, $(2,7,10,20)$ (splitpoint 1.5)
      \item $ (1,2)$, $(7,10,20)$ (splitpoint 4.5)
      \item $ (1,2,7)$, $(10,20)$ (splitpoint 8.5)
      \item $ (1,2,7,10)$, $(20)$ (splitpoint 15)
    \end{itemize}
    \item For each possible split point compute the sum of squares in both groups.
    \item Use as split point the point that splits both groups best w.r.t. minimizing the sum of squares in both groups.
  \end{enumerate}

  Here, we have only one split variable $x$. A split point $t$, leads to the following half-spaces:% (here, we will have 4 possibilities, see figure below):

  \begin{align*}
  \Nl(t) &= \{ (x,y) \in \Np: x \leq t \} \text{ and } \Nr(t) = \{ (x,y) \in \Np: x > t \}.
  \end{align*}

  Remember the minimization Problem (here only for one split variable $x$):

  \begin{align*}
  \min_{t} \left(\min_{c_1} \sum_{(x,y) \in \Nl} (y - c_1)^2 + \min_{c_2} \sum_{(x,y) \in \Nr} (y - c_2)^2 \right).
  \end{align*}
  The inner minimization is solved through:
  $\hat{c}_1 = \bar{y}_1$ and $\hat{c}_2 = \bar{y}_2$

  Which results in:

  \begin{align*}
  \min_{t} \left(\sum_{(x,y) \in \Nl} (y - \bar{y}_1)^2 + \sum_{(x,y) \in \Nr} (y - \bar{y}_2)^2 \right).
  \end{align*}

  % <<echo = -1, fig.height=5, fig.width=5, fig.align='center'>>=
  % par(mfrow = c(2,2), mar = c(4,4,1,1))
  % x = c(1,2,7,10,20)
  % y = c(1,1,0.5,10,11)
  % for (i in 1:(length(x) - 1)) plot(x, y, col = as.factor(x <= x[i]))
  % @
  The sum of squares error of the parent is:
  $$Impurity_{parent} = MSE_{parent} = \frac{1}{5} \sum_{i=1}^5 (y_i - 4.7)^2 = 22.56 $$

  Calculate the risk for each split point:

  \begin{itemize}
    \item[$x \leq 1.5$]
      \begin{align*}
        \mathcal{R}(1, 1.5) &= \frac{1}{5}\text{MSE}_{left} + \frac{4}{5}\text{MSE}_{right}  =  \\
        &= \frac{1}{5} \cdot \frac{1}{1}(1 - 1)^2 + \frac{4}{5} \cdot\frac{1}{4}((1 - 5.625)^2 + (0.5 - 5.625)^2 + (10 - 5.625)^2 + (11 - 5.625)^2) \\
        &= 19.1375
      \end{align*}

    \item[$x \leq 4.5$] $\mathcal{R}(1, 4.5) = 13.43$
    \item[$x \leq 8.5$] $\mathcal{R}(1, 8.5) = 0.13$
    \item[$x \leq 15$] $\mathcal{R}(1, 15) = 12.64$

  \end{itemize}

  Minimal empirical risk is obtained by choosing the split point $8.5$.

  Doing the same for the $\log$-transformation gives:
  \begin{itemize}
    \item[$x \leq 0.3$] $\mathcal{R}(1, 0.3) = 19.14$
    \item[$x \leq 1.3$] $\mathcal{R}(1, 1.3) = 13.43$
    \item[$x \leq 2.1$] $\mathcal{R}(1, 2.1) = 0.13$
    \item[$x \leq 2.6$] $\mathcal{R}(1, 2.6) = 12.64$
  \end{itemize}

  Minimal empirical risk is obtained by choosing the split point $2.1$.


  \item Code example:
  
  <<>>=
  x = c(1,2,7,10,20)
  y = c(1,1,0.5,10,11)

  calculate_mse <- function (y) mean((y - mean(y))^2)
  calculate_total_mse <- function (yleft, yright) {
    num_left <- length(yleft)
    num_right <- length(yright)

    w_mse_left <- num_left / (num_left + num_right) * calculate_mse(yleft)
    w_mse_right <- num_right / (num_left + num_right) * calculate_mse(yright)

    return(w_mse_left + w_mse_right)
  }

  split <- function(x, y) {
    # try out all unique points as potential split points and ...
    unique_sorted_x <- sort(unique(x))
    split_points <- unique_sorted_x[1:(length(unique_sorted_x) - 1)] + 
      0.5 * diff(unique_sorted_x)
    node_mses <- lapply(split_points, function(i) {
      y_left <- y[x <= i]
      y_right <- y[x > i]

      # ... compute SS in both groups
      mse_split <- calculate_total_mse(y_left, y_right)
      print(sprintf("Split at %.1f: empirical Risk = %.2f", i, mse_split))

      return(mse_split)
    })
    # select the split point yielding the maximum impurity reduction
    best <- which.min(node_mses)
    split_points[best]
  }

  x
  split(x, y) # the 3rd observation is the best split point

  log(x)
  split(log(x), y) # also here, the 3rd observation is the best split point
  @


\end{itemize}
